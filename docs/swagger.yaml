basePath: /api/v1
definitions:
  models.Response:
    properties:
      data:
        type: object
      error:
        type: string
      success:
        type: boolean
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      updatedAt:
        type: string
    type: object
  models.UserReq:
    properties:
      email:
        type: string
    type: object
info:
  contact:
    email: contact@rakshit.dev
    name: Rakshit Bhalla
    url: https://rakshit.dev
  description: Gin Rest Api Boilerplate
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Gin Rest Api Boilerplate
  version: 1.0.0
paths:
  /:
    get:
      description: get all users
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get all users
      tags:
      - user-controller
    post:
      consumes:
      - application/json
      description: Create new user based on parameters
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserReq'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Create new user
      tags:
      - user-controller
  /{userId}:
    delete:
      description: delete user by UserID
      parameters:
      - description: UserID
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete one user
      tags:
      - user-controller
    get:
      description: get user by UserID
      parameters:
      - description: UserID
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get one user
      tags:
      - user-controller
swagger: "2.0"
